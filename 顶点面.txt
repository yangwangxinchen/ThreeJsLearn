            var geometry = new THREE.Geometry(); //声明一个几何体对象Geometry
//// 创建一个立方体
// v6----- v5
// /|  /|
// v1------v0|
// | |  | |
// | |v7---|-|v4
// |/  |/
// v2------v3
            var vertices = [
                new THREE.Vector3(10, 10, 10), //v0
                new THREE.Vector3(-10, 10, 10), //v1
                new THREE.Vector3(-20, -10, 10), //v2
                new THREE.Vector3(20, -10, 10), //v3
                new THREE.Vector3(20, -10, -10), //v4
                new THREE.Vector3(10, 10, -10), //v5
                new THREE.Vector3(-10, 10, -10), //v6
                new THREE.Vector3(-20, -10, -10) //v7
               ];

               geometry.vertices=vertices
            
               var faces=[
                new THREE.Face3(0,1,2),   //根据顶点坐标生成面
                new THREE.Face3(0,2,3),
                new THREE.Face3(0,3,4),
                new THREE.Face3(0,4,5),
                new THREE.Face3(1,6,7),
                new THREE.Face3(1,7,2),
                new THREE.Face3(6,5,4),
                new THREE.Face3(6,4,7),
                new THREE.Face3(5,6,1),
                new THREE.Face3(5,1,0),
                new THREE.Face3(3,2,7),
                new THREE.Face3(3,7,4)
               ];
               geometry.faces=faces
               geometry.computeFaceNormals();   //计算法向量

             var  cube = new THREE.Mesh(geometry, new THREE.MeshLambertMaterial({color: 0xaaaaaa}));
             engine.scene.add(cube)
